{
	"version": 2,
	"projects": {
		"AppConfigModule": {
			"root": "libs/nest/config/app",
			"sourceRoot": "libs/nest/config/app/src",
			"projectType": "library",
			"targets": {
				"lint": {
					"executor": "@nrwl/linter:eslint",
					"outputs": [
						"{options.outputFile}"
					],
					"options": {
						"lintFilePatterns": [
							"libs/nest/config/app/**/*.ts"
						]
					}
				},
				"test": {
					"executor": "@nrwl/jest:jest",
					"outputs": [
						"coverage/libs/nest/config/app"
					],
					"options": {
						"jestConfig": "libs/nest/config/app/jest.config.ts",
						"passWithNoTests": true
					}
				}
			},
			"tags": [
				"backend",
				"nest"
			]
		},
		"AuthModule": {
			"root": "libs/nest/auth",
			"sourceRoot": "libs/nest/auth/src",
			"projectType": "library",
			"targets": {
				"lint": {
					"executor": "@nrwl/linter:eslint",
					"outputs": [
						"{options.outputFile}"
					],
					"options": {
						"lintFilePatterns": [
							"libs/nest/auth/**/*.ts"
						]
					}
				},
				"test": {
					"executor": "@nrwl/jest:jest",
					"outputs": [
						"coverage/libs/nest/auth"
					],
					"options": {
						"jestConfig": "libs/nest/auth/jest.config.ts",
						"passWithNoTests": true
					}
				}
			},
			"tags": [
				"backend",
				"nest"
			]
		},
		"BaseModel": {
			"root": "libs/nest/models/base-model",
			"sourceRoot": "libs/nest/models/base-model/src",
			"projectType": "library",
			"targets": {
				"lint": {
					"executor": "@nrwl/linter:eslint",
					"outputs": [
						"{options.outputFile}"
					],
					"options": {
						"lintFilePatterns": [
							"libs/nest/models/base-model/**/*.ts"
						]
					}
				},
				"test": {
					"executor": "@nrwl/jest:jest",
					"outputs": [
						"coverage/libs/nest/models/base-model"
					],
					"options": {
						"jestConfig": "libs/nest/models/base-model/jest.config.ts",
						"passWithNoTests": true
					}
				}
			},
			"tags": [
				"backend",
				"nest"
			]
		},
		"CipherProvider": {
			"root": "libs/nest/providers/cipher",
			"sourceRoot": "libs/nest/providers/cipher/src",
			"projectType": "library",
			"targets": {
				"lint": {
					"executor": "@nrwl/linter:eslint",
					"outputs": [
						"{options.outputFile}"
					],
					"options": {
						"lintFilePatterns": [
							"libs/nest/providers/cipher/**/*.ts"
						]
					}
				},
				"test": {
					"executor": "@nrwl/jest:jest",
					"outputs": [
						"coverage/libs/nest/providers/cipher"
					],
					"options": {
						"jestConfig": "libs/nest/providers/cipher/jest.config.ts",
						"passWithNoTests": true
					}
				}
			},
			"tags": [
				"backend",
				"nest"
			]
		},
		"DatabaseProvider": {
			"root": "libs/nest/providers/db",
			"sourceRoot": "libs/nest/providers/db/src",
			"projectType": "library",
			"targets": {
				"lint": {
					"executor": "@nrwl/linter:eslint",
					"outputs": [
						"{options.outputFile}"
					],
					"options": {
						"lintFilePatterns": [
							"libs/nest/providers/db/**/*.ts"
						]
					}
				},
				"test": {
					"executor": "@nrwl/jest:jest",
					"outputs": [
						"coverage/libs/nest/providers/db"
					],
					"options": {
						"jestConfig": "libs/nest/providers/db/jest.config.ts",
						"passWithNoTests": true
					}
				}
			},
			"tags": [
				"backend",
				"nest"
			]
		},
		"DbConfigModule": {
			"root": "libs/nest/config/db",
			"sourceRoot": "libs/nest/config/db/src",
			"projectType": "library",
			"targets": {
				"lint": {
					"executor": "@nrwl/linter:eslint",
					"outputs": [
						"{options.outputFile}"
					],
					"options": {
						"lintFilePatterns": [
							"libs/nest/config/db/**/*.ts"
						]
					}
				},
				"test": {
					"executor": "@nrwl/jest:jest",
					"outputs": [
						"coverage/libs/nest/config/db"
					],
					"options": {
						"jestConfig": "libs/nest/config/db/jest.config.ts",
						"passWithNoTests": true
					}
				}
			},
			"tags": [
				"backend",
				"nest"
			]
		},
		"DockerHandler": {
			"root": "libs/docker-handler",
			"sourceRoot": "libs/docker-handler/src",
			"projectType": "library",
			"targets": {
				"lint": {
					"executor": "@nrwl/linter:eslint",
					"outputs": [
						"{options.outputFile}"
					],
					"options": {
						"lintFilePatterns": [
							"libs/docker-handler/**/*.ts"
						]
					}
				},
				"test": {
					"executor": "@nrwl/jest:jest",
					"outputs": [
						"coverage/libs/docker-handler"
					],
					"options": {
						"jestConfig": "libs/docker-handler/jest.config.ts",
						"passWithNoTests": true
					}
				}
			},
			"tags": [
				"backend",
				"nest"
			]
		},
		"GqlConfigModule": {
			"root": "libs/nest/config/graphql",
			"sourceRoot": "libs/nest/config/graphql/src",
			"projectType": "library",
			"targets": {
				"lint": {
					"executor": "@nrwl/linter:eslint",
					"outputs": [
						"{options.outputFile}"
					],
					"options": {
						"lintFilePatterns": [
							"libs/nest/config/graphql/**/*.ts"
						]
					}
				},
				"test": {
					"executor": "@nrwl/jest:jest",
					"outputs": [
						"coverage/libs/nest/config/graphql"
					],
					"options": {
						"jestConfig": "libs/nest/config/graphql/jest.config.ts",
						"passWithNoTests": true
					}
				}
			},
			"tags": [
				"backend",
				"nest"
			]
		},
		"GraphQLProvider": {
			"root": "libs/nest/providers/graphql",
			"sourceRoot": "libs/nest/providers/graphql/src",
			"projectType": "library",
			"targets": {
				"lint": {
					"executor": "@nrwl/linter:eslint",
					"outputs": [
						"{options.outputFile}"
					],
					"options": {
						"lintFilePatterns": [
							"libs/nest/providers/graphql/**/*.ts"
						]
					}
				},
				"test": {
					"executor": "@nrwl/jest:jest",
					"outputs": [
						"coverage/libs/nest/providers/graphql"
					],
					"options": {
						"jestConfig": "libs/nest/providers/graphql/jest.config.ts",
						"passWithNoTests": true
					}
				}
			},
			"tags": [
				"backend",
				"nest"
			]
		},
		"MigrationProvider": {
			"root": "libs/nest/providers/migrator",
			"sourceRoot": "libs/nest/providers/migrator/src",
			"projectType": "library",
			"targets": {
				"lint": {
					"executor": "@nrwl/linter:eslint",
					"outputs": [
						"{options.outputFile}"
					],
					"options": {
						"lintFilePatterns": [
							"libs/nest/providers/migrator/**/*.ts"
						]
					}
				},
				"test": {
					"executor": "@nrwl/jest:jest",
					"outputs": [
						"coverage/libs/nest/providers/migrator"
					],
					"options": {
						"jestConfig": "libs/nest/providers/migrator/jest.config.ts",
						"passWithNoTests": true
					}
				}
			},
			"tags": [
				"backend",
				"nest"
			]
		},
		"PrismaMongo": {
			"root": "libs/prisma/mongo",
			"sourceRoot": "libs/prisma/mongo/src",
			"projectType": "library",
			"targets": {
				"build": {
					"executor": "@nrwl/workspace:run-commands",
					"outputs": [
						"libs/prisma/mongo/src/client",
						"dist/apps/backend/schema.prisma"
					],
					"options": {
						"schema": "libs/prisma/mongo/src/schema.prisma",
						"command": "yarn prisma:pnp generate --schema={args.schema}",
						"outputPath": "libs/prisma/mongo/src/client"
					},
					"dependsOn": [
						{
							"target": "lint",
							"projects": "self"
						}
					]
				},
				"lint": {
					"executor": "@nrwl/workspace:run-commands",
					"options": {
						"schema": "libs/prisma/mongo/src/schema.prisma",
						"command": "yarn prisma format --schema={args.schema}",
						"outputPath": "libs/prisma/mongo/src/schema.prisma"
					},
					"dependsOn": [
						{
							"target": "merge",
							"projects": "self"
						}
					]
				},
				"merge": {
					"executor": "@nrwl/workspace:run-commands",
					"options": {
						"extension": ".mdb.prisma",
						"cwd": "libs/prisma/mongo/src",
						"commands": [
							"echo '// Generated file. Changes will be lost. Edit `lib/base.prisma` or `*{args.extension}` files. ' | cat - lib/base.prisma > schema.prisma",
							"find ../../../../ -type f -regex \".*\\{args.extension}\" | while read f; do cat $f >> schema.prisma; echo \"\" >> schema.prisma; done"
						],
						"outputPath": "libs/prisma/mongo/src/schema.prisma",
						"parallel": false
					}
				},
				"migrate": {
					"executor": "./tools/nx/executors/workspace:interactive-command",
					"options": {
						"schema": "libs/prisma/mongo/src/schema.prisma",
						"command": "yarn prisma migrate dev --skip-generate --schema={args.schema}"
					},
					"dependsOn": [
						{
							"target": "build",
							"projects": "self"
						}
					]
				},
				"pull": {
					"executor": "@nrwl/workspace:run-commands",
					"options": {
						"schema": "libs/prisma/mongo/src/schema.prisma",
						"command": "yarn prisma db pull --print --schema={args.schema} > introspection.prisma",
						"cwd": "libs/prisma/mongo/src"
					}
				},
				"serve": {
					"executor": "@nrwl/workspace:run-commands",
					"options": {
						"schema": "libs/prisma/mongo/src/schema.prisma",
						"command": "yarn prisma studio --schema={args.schema}"
					},
					"dependsOn": [
						{
							"target": "lint",
							"projects": "self"
						}
					]
				},
				"test": {
					"executor": "@nrwl/jest:jest",
					"outputs": [
						"coverage/libs/mongo/postgres"
					],
					"options": {
						"jestConfig": "libs/prisma/mongo/jest.config.ts",
						"passWithNoTests": true
					}
				},
				"validate": {
					"executor": "@nrwl/workspace:run-commands",
					"options": {
						"schema": "libs/prisma/mongo/src/schema.prisma",
						"command": "yarn prisma validate --schema={args.schema}"
					},
					"dependsOn": [
						{
							"target": "lint",
							"projects": "self"
						}
					]
				}
			},
			"tags": [
				"backend",
				"nest",
				"prisma"
			]
		},
		"PrismaPostgres": {
			"root": "libs/prisma/postgres",
			"sourceRoot": "libs/prisma/postgres/src",
			"projectType": "library",
			"targets": {
				"build": {
					"executor": "@nrwl/workspace:run-commands",
					"outputs": [
						"libs/prisma/postgres/src/client",
						"dist/apps/backend/schema.prisma"
					],
					"options": {
						"schema": "libs/prisma/postgres/src/schema.prisma",
						"command": "yarn prisma:pnp generate --schema={args.schema}",
						"outputPath": "libs/prisma/postgres/src/client"
					},
					"dependsOn": [
						{
							"target": "lint",
							"projects": "self"
						}
					]
				},
				"lint": {
					"executor": "@nrwl/workspace:run-commands",
					"options": {
						"schema": "libs/prisma/postgres/src/schema.prisma",
						"command": "yarn prisma format --schema={args.schema}",
						"outputPath": "libs/prisma/postgres/src/schema.prisma"
					},
					"dependsOn": [
						{
							"target": "merge",
							"projects": "self"
						}
					]
				},
				"merge": {
					"executor": "@nrwl/workspace:run-commands",
					"options": {
						"extension": ".pg.prisma",
						"cwd": "libs/prisma/postgres/src",
						"commands": [
							"echo '// Generated file. Changes will be lost. Edit `lib/base.prisma` or `*{args.extension}` files. ' | cat - lib/base.prisma > schema.prisma",
							"find ../../../../ -type f -regex \".*\\{args.extension}\" | while read f; do cat $f >> schema.prisma; echo \"\" >> schema.prisma; done"
						],
						"outputPath": "libs/prisma/postgres/src/schema.prisma",
						"parallel": false
					}
				},
				"migrate": {
					"executor": "./tools/nx/executors/workspace:interactive-command",
					"options": {
						"schema": "libs/prisma/postgres/src/schema.prisma",
						"command": "yarn prisma migrate dev --skip-generate --schema={args.schema}"
					},
					"dependsOn": [
						{
							"target": "build",
							"projects": "self"
						}
					]
				},
				"pull": {
					"executor": "@nrwl/workspace:run-commands",
					"options": {
						"schema": "libs/prisma/postgres/src/schema.prisma",
						"command": "yarn prisma db pull --print --schema={args.schema} > introspection.prisma",
						"cwd": "libs/prisma/postgres/src"
					}
				},
				"serve": {
					"executor": "@nrwl/workspace:run-commands",
					"options": {
						"schema": "libs/prisma/postgres/src/schema.prisma",
						"command": "yarn prisma studio --schema={args.schema}"
					},
					"dependsOn": [
						{
							"target": "lint",
							"projects": "self"
						}
					]
				},
				"test": {
					"executor": "@nrwl/jest:jest",
					"outputs": [
						"coverage/libs/prisma/postgres"
					],
					"options": {
						"jestConfig": "libs/prisma/postgres/jest.config.ts",
						"passWithNoTests": true
					}
				},
				"validate": {
					"executor": "@nrwl/workspace:run-commands",
					"options": {
						"schema": "libs/prisma/postgres/src/schema.prisma",
						"command": "yarn prisma validate --schema={args.schema}"
					},
					"dependsOn": [
						{
							"target": "lint",
							"projects": "self"
						}
					]
				}
			},
			"tags": [
				"backend",
				"nest",
				"prisma"
			]
		},
		"PrismaWrapper": {
			"root": "libs/prisma/wrapper",
			"sourceRoot": "libs/prisma/wrapper/src",
			"projectType": "library",
			"targets": {
				"lint": {
					"executor": "@nrwl/linter:eslint",
					"outputs": [
						"{options.outputFile}"
					],
					"options": {
						"lintFilePatterns": [
							"libs/prisma/wrapper/**/*.ts"
						]
					}
				},
				"test": {
					"executor": "@nrwl/jest:jest",
					"outputs": [
						"coverage/libs/prisma/wrapper"
					],
					"options": {
						"jestConfig": "libs/prisma/wrapper/jest.config.ts",
						"passWithNoTests": true
					}
				}
			},
			"tags": [
				"backend",
				"prisma"
			]
		},
		"SeedProvider": {
			"root": "libs/nest/providers/seeders",
			"sourceRoot": "libs/nest/providers/seeders/src",
			"projectType": "library",
			"targets": {
				"lint": {
					"executor": "@nrwl/linter:eslint",
					"outputs": [
						"{options.outputFile}"
					],
					"options": {
						"lintFilePatterns": [
							"libs/nest/providers/seeders/**/*.ts"
						]
					}
				},
				"test": {
					"executor": "@nrwl/jest:jest",
					"outputs": [
						"coverage/libs/nest/providers/seeders"
					],
					"options": {
						"jestConfig": "libs/nest/providers/seeders/jest.config.ts",
						"passWithNoTests": true
					}
				}
			},
			"tags": [
				"backend",
				"nest"
			]
		},
		"Session": {
			"root": "libs/nest/models/session",
			"sourceRoot": "libs/nest/models/session/src",
			"projectType": "library",
			"targets": {
				"lint": {
					"executor": "@nrwl/linter:eslint",
					"outputs": [
						"{options.outputFile}"
					],
					"options": {
						"lintFilePatterns": [
							"libs/nest/models/session/**/*.ts"
						]
					}
				},
				"test": {
					"executor": "@nrwl/jest:jest",
					"outputs": [
						"coverage/libs/nest/models/session"
					],
					"options": {
						"jestConfig": "libs/nest/models/session/jest.config.ts",
						"passWithNoTests": true
					}
				}
			},
			"tags": [
				"backend",
				"nest"
			]
		},
		"User": {
			"root": "libs/nest/models/user",
			"sourceRoot": "libs/nest/models/user/src",
			"projectType": "library",
			"targets": {
				"lint": {
					"executor": "@nrwl/linter:eslint",
					"outputs": [
						"{options.outputFile}"
					],
					"options": {
						"lintFilePatterns": [
							"libs/nest/models/user/**/*.ts"
						]
					}
				},
				"test": {
					"executor": "@nrwl/jest:jest",
					"outputs": [
						"coverage/libs/nest/models/user"
					],
					"options": {
						"jestConfig": "libs/nest/models/user/jest.config.ts",
						"passWithNoTests": true
					}
				}
			},
			"tags": [
				"backend",
				"nest"
			]
		},
		"backend": {
			"root": "apps/backend",
			"sourceRoot": "apps/backend/src",
			"projectType": "application",
			"targets": {
				"build": {
					"executor": "@nrwl/node:webpack",
					"outputs": [
						"{options.outputPath}",
						"dist/apps/backend/schema.prisma"
					],
					"options": {
						"outputPath": "dist/apps/backend",
						"main": "apps/backend/src/main.ts",
						"tsConfig": "apps/backend/tsconfig.app.json",
						"assets": [
							"apps/backend/src/static"
						],
						"webpackConfig": "apps/backend/webpack.config.js",
						"additionalEntryPoints": [
							{
								"entryName": "migrate",
								"entryPath": "apps/backend/src/migrate.ts"
							},
							{
								"entryName": "seed",
								"entryPath": "apps/backend/src/seed.ts"
							}
						],
						"dependsOn": [
							{
								"target": "build",
								"projects": "PrismaPostgres"
							}
						]
					},
					"configurations": {
						"production": {
							"optimization": true,
							"extractLicenses": true,
							"inspect": false,
							"fileReplacements": [
								{
									"replace": "apps/backend/environments/environment.ts",
									"with": "apps/backend/environments/environment.prod.ts"
								}
							]
						}
					}
				},
				"prod": {
					"executor": "@nrwl/workspace:run-commands",
					"options": {
						"prismaSchema": "libs/prisma/postgres/src/schema.prisma",
						"backendDist": "dist/apps/backend",
						"commands": [
							"cp {args.prismaSchema} {args.backendDist}"
						]
					},
					"dependsOn": [
						{
							"target": "build",
							"projects": "self"
						}
					]
				},
				"serve": {
					"executor": "@nrwl/node:node",
					"options": {
						"buildTarget": "backend:build"
					}
				},
				"lint": {
					"executor": "@nrwl/linter:eslint",
					"options": {
						"lintFilePatterns": [
							"apps/backend/**/*.ts"
						]
					},
					"outputs": [
						"{options.outputFile}"
					]
				},
				"test": {
					"executor": "@nrwl/jest:jest",
					"outputs": [
						"dist/coverage/backend"
					],
					"options": {
						"jestConfig": "apps/backend/jest.config.ts",
						"passWithNoTests": true
					}
				},
				"e2e": {
					"executor": "@nrwl/jest:jest",
					"outputs": [
						"dist/coverage/backend"
					],
					"options": {
						"jestConfig": "e2e/backend/jest.config.ts",
						"passWithNoTests": false
					}
				}
			},
			"tags": [
				"backend",
				"nest"
			]
		},
		"deployment": {
			"root": "libs/deployment",
			"sourceRoot": "libs/deployment/src",
			"projectType": "library",
			"targets": {
				"build": {
					"executor": "@nrwl/workspace:run-commands",
					"options": {
						"command": "nx build backend; nx build frontend"
					}
				},
				"init": {
					"executor": "@nrwl/workspace:run-commands",
					"options": {
						"command": "dotenv -- cross-env-shell DEPLOY_COLOR=blue ./libs/deploy-scripts/init.sh"
					},
					"dependsOn": [
						{
							"target": "build",
							"projects": "self"
						}
					]
				},
				"swap": {
					"executor": "@nrwl/workspace:run-commands",
					"options": {
						"command": "dotenv -- cross-env-shell ./libs/deploy-scripts/swap.sh"
					}
				}
			},
			"tags": [
				"deployment"
			]
		},
		"frontend": {
			"root": "apps/frontend",
			"sourceRoot": "apps/frontend/src",
			"projectType": "application",
			"targets": {
				"build": {
					"executor": "@nrwl/workspace:run-commands",
					"outputs": [
						"dist/apps/frontend"
					],
					"options": {
						"viteRoot": "apps/frontend",
						"command": "yarn vite build {args.viteRoot}",
						"outputPath": "dist/apps/frontend"
					}
				},
				"e2e": {
					"executor": "@nrwl/workspace:run-commands",
					"outputs": [
						"{options.outputFile}"
					],
					"options": {
						"command": "start-server-and-test 'yarn nx preview frontend' http://127.0.0.1:4173/ 'yarn cypress run --e2e --project ./e2e/frontend'"
					}
				},
				"e2e:explore": {
					"executor": "@nrwl/workspace:run-commands",
					"options": {
						"command": "start-server-and-test 'yarn nx preview frontend' http://127.0.0.1:4173/ 'yarn cypress open --e2e --project ./e2e/frontend'"
					}
				},
				"lint": {
					"executor": "@nrwl/linter:eslint",
					"options": {
						"lintFilePatterns": [
							"apps/frontend/**/*.{ts,tsx,vue}"
						]
					},
					"outputs": [
						"{options.outputFile}"
					]
				},
				"preview": {
					"executor": "@nrwl/workspace:run-commands",
					"options": {
						"viteRoot": "apps/frontend",
						"command": "yarn vite preview {args.viteRoot}"
					},
					"dependsOn": [
						{
							"target": "build",
							"projects": "self"
						}
					]
				},
				"serve": {
					"executor": "@nrwl/workspace:run-commands",
					"outputs": [
						".yarn/cache/vite"
					],
					"options": {
						"viteRoot": "apps/frontend",
						"command": "yarn vite {args.viteRoot}",
						"outputPath": ".yarn/cache/vite"
					}
				},
				"test": {
					"executor": "@nrwl/workspace:run-commands",
					"outputs": [
						"dist/tests/junit-vitest-frontend-unit.xml",
						"dist/tests/vitest-frontend-unit.json"
					],
					"options": {
						"viteRoot": "apps/frontend",
						"command": "yarn vitest -r {args.viteRoot}",
						"outputPath": [
							"dist/tests/junit-vitest-frontend-unit.xml",
							"dist/tests/vitest-frontend-unit.json"
						]
					}
				},
				"type-check": {
					"executor": "@nrwl/workspace:run-commands",
					"options": {
						"viteRoot": "apps/frontend",
						"command": "yarn vue-tsc --noEmit -p {args.viteRoot}/tsconfig.vitest.json --composite false"
					}
				}
			},
			"tags": [
				"frontend",
				"vite",
				"vue"
			]
		},
		"placeholder": {
			"root": "apps/placeholder",
			"projectType": "application",
			"sourceRoot": "apps/placeholder/src",
			"targets": {
				"build": {
					"executor": "@nxrs/cargo:build",
					"options": {
						"release": false,
						"targetDir": "dist/apps/placeholder"
					},
					"configurations": {
						"production": {
							"release": true,
							"targetDir": "dist/apps/placeholder"
						}
					}
				},
				"test": {
					"executor": "@nxrs/cargo:test",
					"options": {
						"targerDir": "dist/apps/placeholder"
					}
				},
				"lint": {
					"executor": "@nxrs/cargo:clippy",
					"options": {
						"fix": false,
						"failOnWarnings": true,
						"noDeps": true
					}
				}
			},
			"tags": [
				"backend",
				"rust"
			]
		}
	}
}
