# Variables can be referenced in subsequent variables with `${VAR}` syntax

###############################################################################
# APPLICATION
# Domain name without `www`
APP_DOMAIN=example.com
BACKEND_PORT=3001
# Route at which the backend will be served. E.g., https://example.com/v1
BACKEND_BASE_ROUTE=v1
# Route at which GraphQL will be served. E.g., https://example.com/v1/graphql
GRAPHQL_PATH=graphql
APP_TIMEZONE=America/Los_Angeles

###############################################################################
# DATABASE
# Host options include (1 - default) the docker container name for the database
# service, (2) if you would normally use 'localhost' on the host machine, the
# equivalent inside a docker container is 'host.docker.internal' (the database
# container must also be configured to expose its port for this to work) or
# (3) an external domain or IP.
DB_HOST=db
DB_PORT=5432

# By default, DB_USERNAME and DB_PASSWORD are managed as docker secrets. Create
# files with these names in ./src/docker/secrets. If these files do not exist,
# your database may likely initialize with a default username and password set
# by the docker image.

DB_DATABASE_NAME=main
DB_AUTO_LOAD_ENTITIES=true

# PostgreSQL Options
DB_SCHEMA=public

###############################################################################
# NGINX & CERTBOT
CERTBOT_EMAIL=example@${APP_DOMAIN}
# Bits can be changed to 3072, 4096, or higher, but there is diminishing return
# on improved security and exponential time required to generate a prime.
# See README-Docker.md for more information.
NGINX_DH_BITS=2048
# User and Group IDs for `nginx` user on production host machine
NGINX_GID=1001
NGINX_UID=1001
