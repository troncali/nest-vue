# `${VAR}` environment variables are maintained in the root `.env` file

# `nginx/confs/*.conf` files are copied to `/etc/nginx/templates` during Docker
# image build to interpolate variables and output `.conf` files to `/tmp/confs`,
# which are then mounted read-only to`/etc/nginx/confs`. The container symlinks
# `/etc/nginx/nginx.conf`to `/etc/nginx/confs/nginx.conf`.
# See https://hub.docker.com/_/nginx, "Using environment variables" (nginx@^1.19)

worker_processes		auto; # Or number of host processors: `grep processor /proc/cpuinfo | wc -l`
error_log				/tmp/error.log notice;
pid						/tmp/nginx.pid; # Writable PID file for non-root user

events {
    worker_connections  1024; # Or result of `ulimit -n` on host machine
}

http {
    server_tokens		off;
	include				/etc/nginx/mime.types;
	index 				index.html;

	log_format	main	'$remote_addr - $remote_user [$time_local] "$request" '
						'$status $body_bytes_sent "$http_referer" '
						'"$http_user_agent" "$http_x_forwarded_for"';
	access_log 	/tmp/access.log main;

	# Writable temporary file paths for non-root user
	client_body_temp_path	/tmp/client_temp;
    fastcgi_temp_path		/tmp/fastcgi_temp;
    proxy_temp_path			/tmp/proxy_temp_path;
    scgi_temp_path			/tmp/scgi_temp;
    uwsgi_temp_path			/tmp/uwsgi_temp;

	resolver 1.1.1.1 1.0.0.1 [2606:4700:4700::1111] [2606:4700:4700::1001] valid=300s;
    resolver_timeout 5s;

	# Symlink to active frontend and backend upstreams (blue.conf or green.conf)
	# https://www.kimsereylam.com/gitlab/nginx/dotnetcore/ubuntu/2019/01/04/custom-blue-green-deployment-with-nginx-and-gitlab-ci.html
    include /etc/nginx/confs/upstreams;

	# Set up blue/green frontends
	include /etc/nginx/confs/frontends.conf;

    # Handle HTTP requests
    include /etc/nginx/confs/http.conf;

	# Handle HTTPS requests
	include /etc/nginx/confs/https.conf;
}

# TODO: https://github.com/wallarm/awesome-nginx-security, https://github.com/andrewnk/docker-alpine-nginx-modsec/blob/master/Dockerfile, mod_security, bunkerized_nginx
# TODO: https://www.nginx.com/blog/build-application-security-shield-with-nginx-wallarm#Agenda
# TODO: https://www.nginx.com/blog/performance-tuning-tips-tricks/, like zip?
# TODO: https://amplify.nginx.com/, https://github.com/docker-library/docs/tree/master/nginx#monitoring-nginx-with-amplify
